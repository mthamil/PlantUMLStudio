<Application
    x:Class="PlantUmlEditor.App" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:utilconvert="clr-namespace:Utilities.Controls.Converters;assembly=Utilities.Controls"
    xmlns:cmd="clr-namespace:PlantUmlEditor.ViewModel.Commands" 
    StartupUri="View/MainWindow.xaml"
    Startup="Application_Startup"
    Exit="Application_Exit">
    
    <Application.Resources>

        <cmd:NullCommand x:Key="NullCommand"/>
        
        <utilconvert:NegatingConverter x:Key="NotConverter"/>

        <utilconvert:ComposingConverter x:Key="NullToVisibilityConverter">
            <utilconvert:ComposingConverter.Converters>
                <utilconvert:NullToFalseValueConverter/>
                <utilconvert:BooleanToVisibilityValueConverter/>
            </utilconvert:ComposingConverter.Converters>
        </utilconvert:ComposingConverter>

        <utilconvert:BooleanToVisibilityValueConverter x:Key="BoolToVisibilityConverter"/>

        <Style x:Key="ButtonFocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="2" 
                                   SnapsToDevicePixels="true" 
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                   StrokeThickness="1" 
                                   StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        
    	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#F3F3F3" Offset="0"/>
    		<GradientStop Color="#EBEBEB" Offset="0.5"/>
    		<GradientStop Color="#DDDDDD" Offset="0.5"/>
    		<GradientStop Color="#CDCDCD" Offset="1"/>
    	</LinearGradientBrush>
        
    	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        
    	<Style x:Key="TabCloseButton" TargetType="{x:Type Button}">
            <Setter Property="Content" Value="X"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontStretch" Value="UltraExpanded"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="BorderBrush" Value="Transparent"/>
    		<Setter Property="BorderThickness" Value="0"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="HorizontalContentAlignment" Value="Center"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Padding" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="Chrome" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                        
    					<ControlTemplate.Triggers>
                            
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="#ADADAD"/>
    						</Trigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="LightGray"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="LightGray"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

        <Style TargetType="{x:Type Image}" x:Key="DisableableIcon">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.3"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
    
</Application>
