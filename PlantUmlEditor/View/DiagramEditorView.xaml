<UserControl 
    x:Class="PlantUmlEditor.View.DiagramEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:vm="clr-namespace:PlantUmlEditor.ViewModel" 
    xmlns:xtn="clr-namespace:PlantUmlEditor.View.MarkupExtensions" 
    xmlns:attached="clr-namespace:Utilities.Controls.Behaviors;assembly=Utilities.Controls" 
    xmlns:avalon="clr-namespace:Utilities.Controls.Behaviors.AvalonEdit;assembly=Utilities.Controls" 
    xmlns:convert="clr-namespace:Utilities.Controls.Converters;assembly=Utilities.Controls" 
    mc:Ignorable="d" 
    d:DesignHeight="462" d:DesignWidth="584"
    FocusManager.FocusedElement="{Binding ElementName=ContentEditor}">
    
    <UserControl.Resources>
        <attached:PlantUmlFoldingStrategy x:Key="FoldingStrategy"/>
        <convert:SecondsToTimeSpanConverter x:Key="SecondsConverter"/>
    </UserControl.Resources>
  
    <Border x:Name="WorkingPanel" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{x:Null}" CornerRadius="0,0,0,0">
        <Grid Height="Auto">
            <Grid.RowDefinitions>
                <RowDefinition Height=".57*"/>
                <RowDefinition Height=".03*" MinHeight="5"/>
                <RowDefinition Height=".40*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" VerticalAlignment="Stretch" FocusManager.IsFocusScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height=".90*"/>
                    <RowDefinition Height=".10*" MinHeight="40"/>
                </Grid.RowDefinitions>
        
                <avalonEdit:TextEditor Grid.Row="0" x:Name="ContentEditor" Padding="10"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                   FontFamily="Consolas" FontSize="11pt" Background="White" Foreground="Black"
                                   IsEnabled="{Binding IsIdle}"
                                   avalon:AvalonEditor.Content="{Binding CodeEditor.Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   avalon:AvalonEditor.ContentIndex="{Binding CodeEditor.ContentIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   avalon:AvalonEditor.HighlightingDefinition="/PlantUML.xshd"
                                   avalon:AvalonEditor.FoldingStrategy="{StaticResource FoldingStrategy}"
                                   avalon:AvalonEditor.BindableUndoStack="{Binding CodeEditor.UndoStack}"
                                   ShowLineNumbers="True">
                    
                    <avalonEdit:TextEditor.InputBindings>
                        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
                    </avalonEdit:TextEditor.InputBindings>
                    
                    <avalonEdit:TextEditor.ContextMenu>
                        <ContextMenu ItemsSource="{Binding CodeEditor.EditorCommands}" 
                                     DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">

                            <ContextMenu.ItemTemplateSelector>
                                <xtn:TypeBasedDataTemplateSelector>
                                    <xtn:TypeBasedDataTemplateSelector.DataTemplates>
                                        <DataTemplate DataType="{x:Type vm:SnippetViewModel}">
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                        <HierarchicalDataTemplate DataType="{x:Type vm:SnippetCategoryViewModel}" ItemsSource="{Binding Snippets}">
                                            <TextBlock Text="{Binding Name}"/>
                                        </HierarchicalDataTemplate>
                                    </xtn:TypeBasedDataTemplateSelector.DataTemplates>
                                </xtn:TypeBasedDataTemplateSelector>
                            </ContextMenu.ItemTemplateSelector>

                            <ContextMenu.ItemContainerStyleSelector>
                                <xtn:TypeBasedStyleSelector>
                                    <xtn:TypeBasedStyleSelector.Styles>
                                        <xtn:StyleMapEntry DataType="{x:Type vm:SnippetViewModel}">
                                            <xtn:StyleMapEntry.Style>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Setter Property="Command" Value="{Binding SelectCommand}"/>
                                                    <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=DataContext.CodeEditor}"/>
                                                </Style>
                                            </xtn:StyleMapEntry.Style>
                                        </xtn:StyleMapEntry>
                                    </xtn:TypeBasedStyleSelector.Styles>
                                </xtn:TypeBasedStyleSelector>
                            </ContextMenu.ItemContainerStyleSelector>

                        </ContextMenu>
                    </avalonEdit:TextEditor.ContextMenu>
                </avalonEdit:TextEditor>
        
                <Border Grid.Row="1" Height="40">
                    <WrapPanel Margin="4" Background="#2B3C59" VerticalAlignment="Center">
                        <Button Content="_Save" Height="Auto" Padding="20, 0, 20, 0" Command="{Binding SaveCommand}" Margin="0,0,7,0"/>
                        <Button Content="_Refresh" Height="Auto" Padding="15, 0, 15, 0" Command="{Binding RefreshCommand}" Margin="0,0,7,0"/>
                        
                        <CheckBox x:Name="AutoSaveCheckbox" Content="AutoSave" VerticalAlignment="Center" IsChecked="{Binding AutoSave, Mode=TwoWay}" Margin="10,0,5,0" Foreground="White"/>
                        <TextBox Text="{Binding AutoSaveInterval, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SecondsConverter}}" VerticalAlignment="Center" MaxWidth="30"/>
                        <TextBlock Text=" Secs" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="White"/>
                        
                        <Slider x:Name="ZoomSlider" Minimum="0.1" Maximum="2.0" Value="0.9" Width="50" SmallChange="0.1" LargeChange="0.2"/>
                    </WrapPanel>
                </Border>
        
            </Grid>

            <GridSplitter Grid.Row="1" VerticalAlignment="Center" Width="Auto" Height="3"  HorizontalAlignment="Stretch" Background="#66808080"/>

            <Expander Grid.Row="2" Name="ImageExpander" ExpandDirection="Up" IsExpanded="True" Margin="0,0,0,0" Background="White" 
                      attached:GridSplitterSupport.IsEnabled="true">
                <Expander.Content>
                    <Border ScrollViewer.CanContentScroll="True" 
                            ScrollViewer.HorizontalScrollBarVisibility="Visible" 
                            ScrollViewer.VerticalScrollBarVisibility="Visible">
          
                        <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanContentScroll="True" 
                                      HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" 
                                      Background="White" >
            
                            <Image x:Name="DiagramImage" HorizontalAlignment="Center" VerticalAlignment="Top" 
                                   Source="{Binding DiagramImage, Mode=OneWay}" 
                                   Stretch="None">
              
                                <Image.ContextMenu>
                                    <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                                                 ItemsSource="{Binding ImageCommands}">
                                        <ContextMenu.ItemTemplate>
                                            <DataTemplate DataType="{x:Type vm:SnippetViewModel}">
                                                <TextBlock Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </ContextMenu.ItemTemplate>

                                        <ContextMenu.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <Setter Property="Command" Value="{Binding Operation}"/>
                                            </Style>
                                        </ContextMenu.ItemContainerStyle>
                                    </ContextMenu>
                                </Image.ContextMenu>
              
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform 
                                            ScaleX="{Binding ElementName=ZoomSlider, Path=Value}" 
                                            ScaleY="{Binding ElementName=ZoomSlider, Path=Value}"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
              
                            </Image>

                        </ScrollViewer>
                    </Border>
                </Expander.Content>
            </Expander>
            
        </Grid>
    </Border>
</UserControl>
