<UserControl 
    x:Class="PlantUmlEditor.View.DiagramEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:avalon="clr-namespace:Utilities.Controls.Behaviors.AvalonEdit;assembly=Utilities.Controls" 
    xmlns:convert="clr-namespace:Utilities.Controls.Converters;assembly=Utilities.Controls" 
    xmlns:MultiKey="clr-namespace:Utilities.Controls.MultiKey;assembly=Utilities.Controls" 
    xmlns:utilcmd="clr-namespace:Utilities.Controls.Commands;assembly=Utilities.Controls" 
    xmlns:cmd="clr-namespace:PlantUmlEditor.ViewModel.Commands"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:split="clr-namespace:Utilities.Controls.Behaviors.GridSplitterExpanderSupport;assembly=Utilities.Controls"
    xmlns:folding="clr-namespace:Utilities.Controls.Behaviors.AvalonEdit.Folding;assembly=Utilities.Controls"
    xmlns:vw="clr-namespace:PlantUmlEditor.View"
    xmlns:Imaging="clr-namespace:PlantUmlEditor.Core.Imaging;assembly=PlantUmlEditor.Core"
    xmlns:Markup="clr-namespace:Utilities.Controls.Markup;assembly=Utilities.Controls"
    mc:Ignorable="d" 
    d:DesignHeight="462" d:DesignWidth="584"
    FocusManager.FocusedElement="{Binding ElementName=ContentEditor}"
    LocalizeExtension.DefaultResxName="PlantUmlEditor.View.DiagramEditorViewResources" Language="{UICulture}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Utilities.Controls;component/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <convert:SecondsToTimeSpanConverter x:Key="SecondsConverter"/>
            <utilcmd:OpenContextMenuCommand x:Key="OpenContextMenuCommand"/>

            <convert:ComposingConverter x:Key="NullToVisibilityConverter">
                <convert:ComposingConverter.Converters>
                    <convert:NullToFalseValueConverter/>
                    <convert:BooleanToVisibilityValueConverter/>
                </convert:ComposingConverter.Converters>
            </convert:ComposingConverter>

        </ResourceDictionary>
    </UserControl.Resources>
  
    <Border x:Name="WorkingPanel" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{x:Null}" CornerRadius="0,0,0,0">
        <DockPanel>

            <Grid Height="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition Height=".57*"/>
                    <RowDefinition Height="15" MinHeight="5"/>
                    <RowDefinition Height=".40*"/>
                </Grid.RowDefinitions>

                <avalonEdit:TextEditor Grid.Row="0" x:Name="ContentEditor" Padding="10"
                                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                       FontFamily="Consolas" FontSize="11pt" Background="White" Foreground="Black"
                                       FocusManager.IsFocusScope="True"
                                       ShowLineNumbers="{Binding CodeEditor.ShowLineNumbers}"
                                       IsEnabled="{Binding IsIdle}"
                                       Document="{Binding CodeEditor.Document}"
                                       SyntaxHighlighting="{Binding CodeEditor.HighlightingDefinition}">
                    
                    <i:Interaction.Behaviors>
                        <avalon:BindableScrollOffsetBehavior ScrollOffset="{Binding CodeEditor.ScrollOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <folding:FoldingStrategyBehavior FoldingStrategy="{Binding CodeEditor.FoldingStrategy}"/>
                        <avalon:SelectionManagement CaretIndex="{Binding CodeEditor.ContentIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectionStart="{Binding CodeEditor.SelectionStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    SelectionLength="{Binding CodeEditor.SelectionLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <avalon:AddLineTransformers>
                            <vw:HexColorCodeTextHighlighter/>
                        </avalon:AddLineTransformers>
                        <avalon:HighlightCurrentLine IsEnabled="{Binding CodeEditor.HighlightCurrentLine}" />
                    </i:Interaction.Behaviors>
                    
                    <avalonEdit:TextEditor.InputBindings>
                        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
                        <MultiKey:MultiKeyBinding Command="{StaticResource OpenContextMenuCommand}" 
                                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=avalonEdit:TextEditor}}"
                                                  Gesture="Ctrl+N,Ctrl+P"/>
                    </avalonEdit:TextEditor.InputBindings>
                    
                    <avalonEdit:TextEditor.ContextMenu>
                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="{Localize CutEditorContextMenuItem, ResxName=PlantUmlEditor.View.DiagramEditorViewResources}" 
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.CodeEditor.CutCommand}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource CutIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Localize CopyEditorContextMenuItem, ResxName=PlantUmlEditor.View.DiagramEditorViewResources}" 
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.CodeEditor.CopyCommand}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource CopyIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Localize PasteEditorContextMenuItem, ResxName=PlantUmlEditor.View.DiagramEditorViewResources}" 
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.CodeEditor.PasteCommand}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource PasteIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{Localize SnippetsEditorContextMenuItem, ResxName=PlantUmlEditor.View.DiagramEditorViewResources}" ItemsSource="{Binding CodeEditor.Snippets}">
                                <MenuItem.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Path=SubMenu}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{Binding Icon}" Stretch="None" Style="{StaticResource DisableableIcon}"/>
                                            <TextBlock Text="{Binding Name}" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </MenuItem.ItemTemplate>
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding Command}"/>
                                        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </ContextMenu>
                    </avalonEdit:TextEditor.ContextMenu>
                </avalonEdit:TextEditor>

                <GridSplitter Grid.Row="1" VerticalAlignment="Center" Width="Auto" Height="3"  HorizontalAlignment="Stretch" Background="#66808080"/>

                <Expander Grid.Row="2" Name="ImageExpander" ExpandDirection="Up" IsExpanded="True" Margin="0,0,0,0" Background="White"
                          Style="{StaticResource ExpanderStyle}">
                    <i:Interaction.Behaviors>
                        <split:GridSplitterExpanderSupportBehavior/>
                    </i:Interaction.Behaviors>
                    <Expander.Content>
                        <Border ScrollViewer.CanContentScroll="True" 
                                ScrollViewer.HorizontalScrollBarVisibility="Visible" 
                                ScrollViewer.VerticalScrollBarVisibility="Visible">
          
                            <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanContentScroll="True" 
                                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" 
                                          Background="White" >
            
                                <Image x:Name="DiagramImage" HorizontalAlignment="Center" VerticalAlignment="Top" 
                                       Source="{Binding DiagramImage, Mode=OneWay}" 
                                       Stretch="None">
              
                                    <Image.ContextMenu>
                                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="{Localize CopyImageContextMenuItem, ResxName=PlantUmlEditor.View.DiagramEditorViewResources}" 
                                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, 
                                                                                 Path=DataContext.DiagramImage}">
                                                <MenuItem.Command>
                                                    <cmd:CopyImageCommand/>
                                                </MenuItem.Command>
                                                <MenuItem.Icon>
                                                    <Image Source="{StaticResource CopyImageIcon_Small}" Stretch="None" Style="{StaticResource DisableableIcon}"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="{Localize CopyImagePathContextMenuItem, ResxName=PlantUmlEditor.View.DiagramEditorViewResources}" 
                                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, 
                                                                                 Path=DataContext.Diagram.ImageFile.FullName}">
                                                <MenuItem.Command>
                                                    <cmd:CopyTextCommand/>
                                                </MenuItem.Command>
                                                <!--<MenuItem.Icon>
                                                    <Image Source="{StaticResource CutIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                                </MenuItem.Icon>-->
                                            </MenuItem>
                                            <MenuItem Header="{Localize BrowseToImageContextMenuItem, ResxName=PlantUmlEditor.View.DiagramEditorViewResources}" 
                                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, 
                                                                                 Path=DataContext.Diagram.ImageFile.FullName}">
                                                <MenuItem.Command>
                                                    <cmd:BrowseToCommand/>
                                                </MenuItem.Command>
                                                <MenuItem.Icon>
                                                    <Image Source="{StaticResource BrowseToImageIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Image.ContextMenu>
              
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform 
                                                ScaleX="{Binding ElementName=ZoomSlider, Path=Value}" 
                                                ScaleY="{Binding ElementName=ZoomSlider, Path=Value}"/>
                                        </TransformGroup>
                                    </Image.RenderTransform>
              
                                </Image>

                            </ScrollViewer>
                        </Border>
                    </Expander.Content>

                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                            <ComboBox ItemsSource="{Markup:EnumValues {x:Type Imaging:ImageFormat}}" SelectedItem="{Binding ImageFormat}" 
                                      HorizontalContentAlignment="Stretch" ToolTip="{Localize ImageFormatComboBoxToolTip}"/>
                            
                            <Slider x:Name="ZoomSlider" Margin="10,0,0,0" Minimum="0.1" Maximum="2.0" Value="1.0" Width="50" SmallChange="0.1" LargeChange="0.2"
                                    Visibility="{Binding DiagramImage, Converter={StaticResource NullToVisibilityConverter}}"/>
                        </StackPanel>
                    </Expander.Header>
                </Expander>
            
            </Grid>
        </DockPanel>
    </Border>
</UserControl>
