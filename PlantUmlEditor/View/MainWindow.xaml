<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    x:Class="PlantUmlEditor.View.MainWindow"
    xmlns:DesignTimeData="clr-namespace:PlantUmlEditor.DesignTimeData" 
    xmlns:vw="clr-namespace:PlantUmlEditor.View" 
    xmlns:convert="clr-namespace:PlantUmlEditor.Converters" 
    xmlns:xtn="clr-namespace:PlantUmlEditor.View.MarkupExtensions" 
    xmlns:vm="clr-namespace:PlantUmlEditor.ViewModel" 
    xmlns:ab="clr-namespace:PlantUmlEditor.Controls.Behaviors"
    xmlns:ctrls="clr-namespace:PlantUmlEditor.Controls" 
    Title="PlantUml Editor" 
    Width="1300" Height="768"
    WindowStartupLocation="CenterScreen" 
    Loaded="Window_Loaded" 
    Closing="Window_Closing">
    
    <Window.Resources>
        <ResourceDictionary>

            <convert:BooleanToVisibilityValueConverter x:Key="BooleanToVisibilityValueConverter"/>
            <convert:DirectoryInfoConverter x:Key="DirectoryInfoConverter"/>               
            <convert:UriConverter x:Key="UriConverter"/>
            <convert:DirectoryInfoUriConverter x:Key="DirectoryUriConverter"/>
            <convert:ReverseConverter x:Key="ReverseUriConverter" InnerConverter="{StaticResource UriConverter}"/>
                
            <convert:ComposingConverter x:Key="NullToVisibilityConverter">
                <convert:ComposingConverter.Converters>
                    <convert:NullToFalseValueConverter/>
                    <convert:BooleanToVisibilityValueConverter/>
                </convert:ComposingConverter.Converters>
            </convert:ComposingConverter>
                
            <convert:ComposingConverter x:Key="ReverseNullToVisibilityConverter">
                <convert:ComposingConverter.Converters>
                    <convert:NullToFalseValueConverter/>
                    <convert:NotConverter/>
                    <convert:BooleanToVisibilityValueConverter/>
                </convert:ComposingConverter.Converters>
            </convert:ComposingConverter>
            
            <convert:DiagramTabNameConverter x:Key="DiagramTabNameConverter"/>
            <convert:NotConverter x:Key="NotConverter"/>

            <DesignTimeData:DiagramFiles x:Key="DesignTimeDiagramFiles" />
      
            <!-- Custom style for diagram listbox which shows preview of diagram as well as preview of the content -->
            <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Style.Resources>
                    <Storyboard x:Key="isSelectedTrue_activated">
                
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" 
                                                        Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"  Value="1.1" KeySpline="0.5,0,0.5,1"/>
                        </DoubleAnimationUsingKeyFrames>
                
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" 
                                                        Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                            <SplineDoubleKeyFrame  KeyTime="00:00:00.3000000" Value="1.1" KeySpline="0.5,0,0.5,1"/>
                        </DoubleAnimationUsingKeyFrames>
                
                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" 
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF828282" KeySpline="0.5,0,0.5,1"/>
                        </ColorAnimationUsingKeyFrames>
                
                    </Storyboard>
                    <Storyboard x:Key="isSelectedTrue_deactivated">
                
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" 
                                                        Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" KeySpline="0.5,0,0.5,1"/>
                        </DoubleAnimationUsingKeyFrames>
                
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" 
                                                        Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" KeySpline="0.5,0,0.5,1"/>
                        </DoubleAnimationUsingKeyFrames>
                
                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" 
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                            <SplineColorKeyFrame KeySpline="0.5,0,0.5,1" KeyTime="00:00:00.3000000" Value="#FF000000"/>
                        </ColorAnimationUsingKeyFrames>
                
                    </Storyboard>
                </Style.Resources>
          
                <Setter Property="VerticalContentAlignment" 
                        Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Margin" Value="2,2,2,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                
                            <Border SnapsToDevicePixels="True" x:Name="Bd" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Padding="{TemplateBinding Padding}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="contentPresenter" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    
                            </Border>
                
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="DeepSkyBlue" TargetName="Bd"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                                
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
          
                <Setter Property="IsSelected" Value="False"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value> 
                        <Style/> 
                    </Setter.Value>
                </Setter>
          
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                    </Setter.Value>
                </Setter>
          
                <Style.Triggers>
                    <Trigger Property="Selector.IsSelected" Value="True">
                        <Setter Property="Background" Value="Blue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <xtn:ViewModelLocator TypeArgument="{x:Type vm:DiagramsViewModel}" x:Key="DiagramsViewModelLocator" />

        </ResourceDictionary>
    </Window.Resources>


    <Grid x:Name="LayoutRoot">
        <Rectangle HorizontalAlignment="Stretch" x:Name="background" VerticalAlignment="Stretch" Stroke="#FF000000" Margin="1,1,0,0"/>
    
        <!-- First split the whole form into 3 rows, one for header, one for body and one for footer -->
        <Grid Height="Auto" x:Name="MainGrid3Rows" Width="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5"
              DataContext="{Binding Source={StaticResource DiagramsViewModelLocator}, Path=ViewModel}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
      
            <StackPanel Grid.Row="0" HorizontalAlignment="Stretch">
                <WrapPanel>
                    <TextBlock FontFamily="Segoe" VerticalAlignment="Top" FontStretch="Condensed" FontWeight="Thin" Margin="7,0,0,0"> 
                        <Run FontSize="36" Foreground="#FF9C9C9C" Text="Plant"/>
                        <Run FontSize="36" Foreground="Black" Text="UML"/>
                        <Run Foreground="DarkGray" FontSize="36" FontFamily="Segoe" FontStretch="Condensed" FontWeight="Thin" Text="Editor" />            
                    </TextBlock>
            
                    <TextBlock Foreground="Black" 
                                VerticalAlignment="Center"
                                FontSize="16" 
                                FontFamily="Segoe" 
                                FontStretch="Condensed" 
                                FontWeight="Thin" 
                                Margin="10"
                                Text="by"/>
                    <TextBlock            
                                Background="{x:Null}"
                                Foreground="#55FFFFFF" 
                                VerticalAlignment="Center"
                                FontSize="16" 
                                FontFamily="Segoe" 
                                FontStretch="Condensed" 
                                FontWeight="Thin" >
                        <Hyperlink Foreground="Black" x:Name="NameHyperlink" Click="NameHyperlink_Click" 
                                   NavigateUri="http://msmvps.com/blogs/omar">Omar AL Zabir</Hyperlink>
                    </TextBlock>
                </WrapPanel>
            </StackPanel>
      
              <!-- Then split the body area into 3 columns, left column for file list, middle column for the grid splitter
                   and the right column for the tabs -->
            <Grid Height="Auto" x:Name="MiddleGrid3Columns" Width="Auto" Grid.Row="1" Grid.Column="0" Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" x:Name="LeftColumn" />
                    <ColumnDefinition Width="Auto" MinWidth="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
        
                <!-- This is the left column controls -->
                <Border Grid.Column="0" Background="{x:Null}" CornerRadius="0,0,0,0" >
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
            
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="300*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions> 
            
                    <!-- This is the location box -->
                    <StackPanel Grid.Row="0" Margin="5,5,5,5">
                    <TextBlock Text="Location:"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />                                    
                            </Grid.ColumnDefinitions>
                      
                            <TextBox Grid.Column="0" x:Name="DiagramLocationTextBox" Height="24" HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Gray" 
                                     ab:TextBoxWatermark.Watermark="Path for diagrams..." Template="{StaticResource WatermarkTextBox}"
                                     Text="{Binding DiagramLocation, Converter={StaticResource DirectoryInfoConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <ctrls:FilePicker SelectedUri="{Binding DiagramLocation, Mode=TwoWay, Converter={StaticResource DirectoryUriConverter}}" 
                                              Trigger="{Binding ElementName=BrowseForFile, Path=IsPressed}" 
                                              InitialLocationUri="{Binding DiagramLocation, Converter={StaticResource DirectoryUriConverter}, Mode=OneWay}"
                                              Mode="Directory"/>
                      
                            <Button Grid.Column="1" Width="Auto" Height="26" Name="BrowseForFile" Content="..."/>

                        </Grid>                            
                    </StackPanel>
            
                    <!-- This is the diagram file listbox -->
                    <ListBox Grid.Row="1" Width="Auto" SelectionMode="Extended" x:Name="DiagramFileListBox" 
                            IsSynchronizedWithCurrentItem="True" 
                            HorizontalContentAlignment="Stretch"    
                            Background="GhostWhite"
                            Foreground="Black" 
                            BorderBrush="{x:Null}" 
                            Margin="0,0,0,10"
                            ScrollViewer.CanContentScroll="True"
                            VirtualizingStackPanel.IsVirtualizing="True"
                            VirtualizingStackPanel.VirtualizationMode="Recycling"
                            VerticalAlignment="Stretch" 
                            MouseDoubleClick="DiagramFileListBox_MouseDoubleClick"
                            SelectedItem="{Binding CurrentDiagram}"
                            ItemContainerStyle="{StaticResource ListBoxItemStyle}"
                            ItemsSource="{Binding Diagrams}" >
                    
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border Padding="0,2,0,2" 
                                            CornerRadius="2" 
                                            x:Name="DiagramItem" 
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="Top">
                                        <StackPanel>
                                            <WrapPanel HorizontalAlignment="Stretch"  Margin="0,0,10,0">
                                                <Image MaxWidth="64" MaxHeight="100" 
                                                       Source="{Binding DiagramImage}" 
                                                       Margin="3, 5, 10, 0" VerticalAlignment="Top"/>
                                                <StackPanel>
                                                    <TextBlock Text="{Binding Diagram.DiagramFileNameOnly}"  />
                                                    <TextBlock 
                                                        Foreground="Black" 
                                                        TextWrapping="WrapWithOverflow" 
                                                        Text="{Binding Diagram.Preview}" 
                                                        TextTrimming="CharacterEllipsis" 
                                                        MaxHeight="100" 
                                                        ClipToBounds="True" 
                                                        VerticalAlignment="Top" />
                                                </StackPanel>                      
                                            </WrapPanel>
                                            <Separator Foreground="Green" Opacity="0.5" />
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                    
                    </ListBox>
            
                    <StackPanel Grid.Row="2" Height="Auto" HorizontalAlignment="Stretch" Margin="0,0,0,4">
                      <ctrls:FilePicker SelectedUri="{Binding NewDiagramUri, Mode=OneWayToSource}" Trigger="{Binding ElementName=CreateNewDiagram, Path=IsPressed}" 
                                        InitialLocationUri="{Binding DiagramLocation.FullName, Converter={StaticResource ReverseUriConverter}, Mode=OneWay}"
                                        Mode="Save" Filter="Diagram text files (*.txt)|*.txt"/>
                      <Button Height="30" x:Name="CreateNewDiagram" Content="Create New Diagram"/>
                      <Button x:Name="RefreshDiagramList" Content="Refresh Diagram List" Command="{Binding LoadDiagramsCommand}" />
                    </StackPanel>
            
                  </Grid>
                </Border>
        
                <GridSplitter Grid.Column="1" Height="100" VerticalAlignment="Center" Width="3" HorizontalAlignment="Center" Grid.Row="0" Background="#66808080" />
        
                <!-- This is the tabs on right column -->
                <TabControl Grid.Column="2" Background="{x:Null}"
                            ItemsSource="{Binding OpenDiagrams}" 
                            SelectedItem="{Binding OpenDiagram}"
                            Visibility="{Binding OpenDiagram, Converter={StaticResource NullToVisibilityConverter}}">

                    <TabControl.ContentTemplate>
                        <DataTemplate DataType="{x:Type vm:DiagramEditorViewModel}">
                            <vw:DiagramViewControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </DataTemplate>
                    </TabControl.ContentTemplate>

                    <TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Content" Value="{Binding}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">

                                        <Grid>
                                            <Border Name="Border" Background="Gray" BorderBrush="Black" BorderThickness="1,1,1,1" CornerRadius="6,6,0,0" >
                                                <DockPanel>
                                                    <TextBlock VerticalAlignment="Center" Margin="12,2,12,2">
                                                        <TextBlock.Text>
                                                            <MultiBinding Converter="{StaticResource DiagramTabNameConverter}">
                                                                <Binding Path="DiagramViewModel.Diagram.DiagramFileNameOnly"/>
                                                                <Binding Path="CodeEditor.IsModified"/>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>

                                                    <Button Content="X" FontWeight="Bold" FontFamily="Segoe UI" Height="20" Width="20" DockPanel.Dock="Right" Margin="1,1,3,1"
                                                            HorizontalAlignment="Center" HorizontalContentAlignment="Center"  VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                            Command="{Binding CloseCommand}"/>
                                                </DockPanel>
                                            </Border>
                                        </Grid>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected"  Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                                <Setter Property="Foreground" Value="Black" />
                                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="Gray" />
                                                <Setter Property="Foreground" Value="Black" />
                                                <Setter TargetName="Border" Property="Opacity" Value="0.4" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.ItemContainerStyle>

                </TabControl>
        
                <!-- This is the welcome panel -->
                <Border x:Name="WelcomePanel" 
                        Grid.Column="2" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"
                        BorderBrush="{x:Null}" 
                        CornerRadius="0,0,0,0"
                        Visibility="{Binding OpenDiagram, Converter={StaticResource ReverseNullToVisibilityConverter}}">
                    <Grid>
                        <Rectangle HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Stretch" 
                                    Fill="GhostWhite" 
                                    Opacity="0.6" 
                                    RadiusX="0" 
                                    RadiusY="0" 
                                    StrokeThickness="1" />
                        <StackPanel>
                            <TextBlock HorizontalAlignment="Center" FontSize="20" FontWeight="Bold" Margin="0,11,0,10">
                                <Run Text="Welcome to PlantUML Designer"/>
                            </TextBlock>
                            <Separator HorizontalAlignment="Stretch" Height="1" />
                            <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Margin="20" FontSize="14" VerticalAlignment="Center">
                                Enter the path of the folder on the location text box to load the diagrams from a folder.                
                                Or you can just click on "Create New Diagram" to start creating a new diagram.                
                            </TextBlock>
                        </StackPanel>
                    </Grid>                    
                </Border>
        
            </Grid>
      
            <!-- This is the bottom row containing status message and progress bar -->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
          
                <TextBlock Grid.Column="0" Grid.Row="0" x:Name="StatusMessage" Width="Auto" HorizontalAlignment="Left">
                    <Run Text="{Binding Progress.Message, TargetNullValue=Ready.}"/>
                </TextBlock>
                <ProgressBar x:Name="StatusProgressBar" Foreground="LightGreen" Background="Gray" 
                             Minimum="0" Maximum="100" Width="215" Grid.ColumnSpan="2" HorizontalAlignment="Right" 
                             IsIndeterminate="{Binding Progress.HasDiscreteProgress, Converter={StaticResource NotConverter}}" 
                             Value="{Binding Progress.PercentComplete, TargetNullValue=-1}"
                             Visibility="{Binding Progress.InProgress, Converter={StaticResource BooleanToVisibilityValueConverter}}"/>
            </Grid>      
      
        </Grid>
    </Grid>
</Window>
