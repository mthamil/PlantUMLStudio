<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    x:Class="PlantUmlEditor.View.MainWindow"
    xmlns:DesignTimeData="clr-namespace:PlantUmlEditor.DesignTimeData" 
    xmlns:vw="clr-namespace:PlantUmlEditor.View" 
    xmlns:convert="clr-namespace:PlantUmlEditor.Converters" 
    xmlns:vm="clr-namespace:PlantUmlEditor.ViewModel" 
    xmlns:attached="clr-namespace:Utilities.Controls.Behaviors;assembly=Utilities.Controls" 
    xmlns:ctrl="clr-namespace:Utilities.Controls;assembly=Utilities.Controls" 
    xmlns:xtn="clr-namespace:PlantUmlEditor.View.MarkupExtensions" 
    Title="PlantUml Editor" 
    Width="1300" Height="768"
    WindowStartupLocation="CenterScreen"
    attached:WindowBehavior.ClosingCommand="{Binding CloseCommand}">
    
    <Window.DataContext>
        <Binding Path="ViewModel">
            <Binding.Source>
                <xtn:ViewModelLocator TypeArgument="{x:Type vm:DiagramManagerViewModel}" />
            </Binding.Source>
        </Binding>
    </Window.DataContext>
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Utilities.Controls;component/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <convert:BooleanToVisibilityValueConverter x:Key="BooleanToVisibilityValueConverter"/>
            <convert:DirectoryInfoConverter x:Key="DirectoryInfoConverter"/>               
            <convert:UriConverter x:Key="UriConverter"/>
            <convert:DirectoryInfoUriConverter x:Key="DirectoryUriConverter"/>
            <convert:ReverseConverter x:Key="ReverseUriConverter" InnerConverter="{StaticResource UriConverter}"/>
                
            <convert:ComposingConverter x:Key="NullToVisibilityConverter">
                <convert:ComposingConverter.Converters>
                    <convert:NullToFalseValueConverter/>
                    <convert:BooleanToVisibilityValueConverter/>
                </convert:ComposingConverter.Converters>
            </convert:ComposingConverter>
                
            <convert:ComposingConverter x:Key="ReverseNullToVisibilityConverter">
                <convert:ComposingConverter.Converters>
                    <convert:NullToFalseValueConverter/>
                    <convert:NotConverter/>
                    <convert:BooleanToVisibilityValueConverter/>
                </convert:ComposingConverter.Converters>
            </convert:ComposingConverter>
            
            <convert:DiagramTabNameConverter x:Key="DiagramTabNameConverter"/>
            <convert:NotConverter x:Key="NotConverter"/>

            <DesignTimeData:DiagramFiles x:Key="DesignTimeDiagramFiles" />
      
            <!-- Custom style for diagram listbox which shows preview of diagram as well as preview of the content -->
            <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">        
                <Setter Property="VerticalContentAlignment" 
                        Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Margin" Value="2,2,2,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                
                            <Border SnapsToDevicePixels="True" x:Name="Bd" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Padding="{TemplateBinding Padding}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="contentPresenter" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    
                            </Border>
                
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="DeepSkyBlue" TargetName="Bd"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                                
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
          
                <Setter Property="IsSelected" Value="False"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value> 
                        <Style/> 
                    </Setter.Value>
                </Setter>
          
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                    </Setter.Value>
                </Setter>
          
                <Style.Triggers>
                    <Trigger Property="Selector.IsSelected" Value="True">
                        <Setter Property="Background" Value="Blue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <xtn:ViewModelLocator TypeArgument="{x:Type vm:IProgressViewModel}" x:Key="ProgressViewModel"/>

        </ResourceDictionary>
    </Window.Resources>


    <Grid x:Name="LayoutRoot" Background="#2B3C59">
        <Rectangle HorizontalAlignment="Stretch" x:Name="background" VerticalAlignment="Stretch" Stroke="#FF000000" Margin="1,1,0,0"/>
    
        <!-- First split the whole form into 3 rows, one for header, one for body and one for footer -->
        <Grid Height="Auto" x:Name="MainGrid3Rows" Width="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" HorizontalAlignment="Stretch">
                <WrapPanel>
                    <TextBlock FontFamily="Segoe" VerticalAlignment="Top" FontStretch="Condensed" FontWeight="Thin" Margin="7,0,0,0"> 
                        <Run FontSize="36" Foreground="LightGray" Text="Plant"/>
                        <Run FontSize="36" Foreground="White" Text="UML"/>
                        <Run Foreground="LightGray" FontSize="36" FontFamily="Segoe" FontStretch="Condensed" FontWeight="Thin" Text="Editor" />
                        <Run FontSize="14" Foreground="White" Text="v2.0"/>
                    </TextBlock>
                </WrapPanel>
            </StackPanel>
      
              <!-- Then split the body area into 3 columns, left column for file list, middle column for the grid splitter
                   and the right column for the tabs -->
            <Grid Height="Auto" Width="Auto" Grid.Row="1" Grid.Column="0" Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="Auto" MinWidth="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
        
                <!-- This is the left column controls -->
                <Expander ExpandDirection="Right" IsExpanded="True" Grid.Column="0" attached:GridSplitterSupport.IsEnabled="true">
                    <Expander.Content>
                        <Border Background="{x:Null}" CornerRadius="0,0,0,0">
                          <Grid DataContext="{Binding Explorer}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
            
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="300*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions> 
            
                            <!-- This is the location box -->
                            <StackPanel Grid.Row="0" Margin="5,5,5,5">
                                <TextBlock Text="Location:" Foreground="White"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />                                    
                                    </Grid.ColumnDefinitions>
                      
                                    <TextBox Grid.Column="0" x:Name="DiagramLocationTextBox"  Height="24" HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Gray" 
                                             attached:TextBoxWatermark.Watermark="Path for diagrams..." Template="{StaticResource WatermarkTextBox}"
                                             Text="{Binding DiagramLocation, Converter={StaticResource DirectoryInfoConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <ctrl:FilePicker SelectedUri="{Binding DiagramLocation, Mode=TwoWay, Converter={StaticResource DirectoryUriConverter}}"
                                                     Trigger="{Binding ElementName=BrowseForFile, Path=IsPressed}" 
                                                     InitialLocationUri="{Binding DiagramLocation, Converter={StaticResource DirectoryUriConverter}, Mode=OneWay}"
                                                     Mode="Directory"/>
                      
                                    <Button Grid.Column="1" Width="Auto" Height="26" Name="BrowseForFile" Content="..."/>

                                </Grid>                            
                            </StackPanel>
            
                            <!-- This is the diagram file listbox -->
                            <ListBox Grid.Row="1" Width="Auto" SelectionMode="Extended"
                                     IsSynchronizedWithCurrentItem="True" 
                                     HorizontalContentAlignment="Stretch"    
                                     Background="GhostWhite"
                                     Foreground="Black" 
                                     BorderBrush="{x:Null}" 
                                     Margin="0,0,0,10"
                                     ScrollViewer.CanContentScroll="True"
                                     VirtualizingStackPanel.IsVirtualizing="True"
                                     VirtualizingStackPanel.VirtualizationMode="Recycling"
                                     VerticalAlignment="Stretch" 
                                     SelectedItem="{Binding CurrentPreviewDiagram}"
                                     ItemContainerStyle="{StaticResource ListBoxItemStyle}"
                                     ItemsSource="{Binding PreviewDiagrams}" 
                                     attached:DoubleClickCommandBehavior.Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.OpenDiagramCommand}"
                                     attached:DoubleClickCommandBehavior.CommandParameter="{Binding CurrentPreviewDiagram}">
                    
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Border Padding="0,2,0,2" 
                                                    CornerRadius="2"
                                                    HorizontalAlignment="Stretch" 
                                                    VerticalAlignment="Top">
                                                <StackPanel>
                                                    <WrapPanel HorizontalAlignment="Stretch"  Margin="0,0,10,0">
                                                        <Image MaxWidth="64" MaxHeight="100" 
                                                               Source="{Binding ImagePreview}" 
                                                               Margin="3, 5, 10, 0" VerticalAlignment="Top"/>
                                                        <StackPanel>
                                                            <TextBlock Text="{Binding Diagram.DiagramFileNameOnly}"/>
                                                            <TextBlock 
                                                                FontFamily="Consolas"
                                                                Foreground="Black" 
                                                                TextWrapping="WrapWithOverflow" 
                                                                Text="{Binding CodePreview}" 
                                                                TextTrimming="CharacterEllipsis" 
                                                                MaxHeight="100" 
                                                                ClipToBounds="True" 
                                                                VerticalAlignment="Top" />
                                                        </StackPanel>                      
                                                    </WrapPanel>
                                                    <Separator Foreground="Green" Opacity="0.5" />
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                    
                            </ListBox>
            
                            <StackPanel Grid.Row="2" Height="Auto" HorizontalAlignment="Stretch" Margin="0,0,0,4">
                                <ctrl:FilePicker SelectedUri="{Binding NewDiagramUri, Mode=OneWayToSource}" 
                                                 AffirmativeCommand="{Binding AddNewDiagramCommand, Mode=OneWay}"
                                                 Trigger="{Binding ElementName=CreateNewDiagram, Path=IsPressed}" 
                                                 InitialLocationUri="{Binding DiagramLocation.FullName, Converter={StaticResource ReverseUriConverter}, Mode=OneWay}"
                                                 Mode="Save" Filter="PlantUML Diagram Files (*.puml)|*.puml"/>
                        
                                <Button Height="30" x:Name="CreateNewDiagram" Content="Create New Diagram"/>
                                <Button Content="Refresh Diagram List" Command="{Binding LoadDiagramsCommand}" />
                            </StackPanel>
            
                          </Grid>
                        </Border>
                    </Expander.Content>
                </Expander>

                <GridSplitter Grid.Column="1" Height="100" VerticalAlignment="Center" Width="3" HorizontalAlignment="Center" Grid.Row="0" Background="#66808080" />

                <ctrl:MVVMMessageBox 
                    Trigger="{Binding ClosingDiagram.CodeEditor.IsModified}"
                    AffirmativeAction="{Binding SaveClosingDiagramCommand}"
                    Message="This document has unsaved changes. Do you want to save them?"
                    Caption="Save Changes?"
                    Type="YesNo"/>

                <!-- This is the tabs on right column -->
                <TabControl Grid.Column="2" Background="{x:Null}"
                            ItemsSource="{Binding OpenDiagrams}" 
                            SelectedItem="{Binding OpenDiagram}"
                            Visibility="{Binding OpenDiagram, Converter={StaticResource NullToVisibilityConverter}}">

                    <TabControl.ContentTemplate>
                        <DataTemplate DataType="{x:Type vm:DiagramEditorViewModel}">
                            <vw:DiagramEditorView HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </DataTemplate>
                    </TabControl.ContentTemplate>

                    <TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Content" Value="{Binding}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">

                                        <Grid>
                                            <Border x:Name="Border" Background="Gray" BorderBrush="Black" BorderThickness="1,1,1,1" CornerRadius="6,6,0,0" >
                                                <DockPanel>
                                                    <TextBlock VerticalAlignment="Center" Margin="12,2,12,2">
                                                        <TextBlock.Text>
                                                            <MultiBinding Converter="{StaticResource DiagramTabNameConverter}">
                                                                <Binding Path="Diagram.DiagramFileNameOnly"/>
                                                                <Binding Path="CodeEditor.IsModified"/>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>

                                                    <Button Content="X" FontWeight="Bold" Height="20" Width="20" DockPanel.Dock="Right" Margin="1,1,3,1"
                                                            HorizontalAlignment="Center" HorizontalContentAlignment="Center"  VerticalContentAlignment="Center" VerticalAlignment="Center"
                                                            Command="{Binding CloseCommand}"/>
                                                </DockPanel>
                                            </Border>
                                        </Grid>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected"  Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                                <Setter Property="Foreground" Value="Black" />
                                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="#44587C" />
                                                <Setter Property="Foreground" Value="White" />
                                                <Setter TargetName="Border" Property="Opacity" Value="1.0" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.ItemContainerStyle>

                </TabControl>
        
                <!-- This is the welcome panel -->
                <Border x:Name="WelcomePanel" 
                        Grid.Column="2" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"
                        BorderBrush="{x:Null}" 
                        CornerRadius="0,0,0,0"
                        Visibility="{Binding OpenDiagram, Converter={StaticResource ReverseNullToVisibilityConverter}}">
                    <Grid>
                        <Rectangle HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Stretch" 
                                    Fill="GhostWhite" 
                                    RadiusX="0" 
                                    RadiusY="0" 
                                    StrokeThickness="1" />
                        <StackPanel>
                            <TextBlock HorizontalAlignment="Center" FontFamily="Segoe UI"  FontSize="20" FontWeight="Bold" Margin="0,11,0,10">
                                <Run Text="Welcome to PlantUML Designer"/>
                            </TextBlock>
                            <Separator HorizontalAlignment="Stretch" Height="1" />
                            <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Margin="20" FontFamily="Segoe UI" FontSize="16" VerticalAlignment="Center">
                                Enter the path of the folder on the location text box to load the diagrams from a folder.                
                                Or you can just click on "Create New Diagram" to start creating a new diagram.                
                            </TextBlock>
                        </StackPanel>
                    </Grid>                    
                </Border>
        
            </Grid>
      
            <!-- This is the bottom row containing status message and progress bar -->
            <StatusBar Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,0" MinHeight="25" Background="#2B3C59"
                       DataContext="{Binding Source={StaticResource ProgressViewModel}, Path=ViewModel}">

                <!--<StatusBar.BorderBrush Color="" />-->
                
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=".85*"/>
                                <ColumnDefinition Width=".15*"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <StatusBarItem Grid.Column="0" HorizontalAlignment="Stretch">
                    <TextBlock Text="{Binding Message, TargetNullValue=Ready.}" Padding="0" HorizontalAlignment="Stretch" Foreground="White">
                        <!--<TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LastEvent.Severity}" Value="Informational">
                                        <Setter Property="Foreground" Value="#FF000000"/>
                                        <Setter Property="FontWeight" Value="Normal"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LastEvent.Severity}" Value="Critical">
                                        <Setter Property="Foreground" Value="#FFFF0000"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>-->
                    </TextBlock>
                </StatusBarItem>

                <StatusBarItem Grid.Column="1" HorizontalAlignment="Stretch">
                    <ProgressBar Foreground="LightGreen" Background="Gray" 
                            VerticalAlignment="Stretch" HorizontalAlignment="Right" Height="18" Width="165" 
                            Minimum="0" Maximum="100" IsIndeterminate="{Binding HasDiscreteProgress, Converter={StaticResource NotConverter}}" 
                            Value="{Binding PercentComplete, TargetNullValue=-1}"
                            Visibility="{Binding InProgress, Converter={StaticResource BooleanToVisibilityValueConverter}}"/>
                </StatusBarItem>
                    
            </StatusBar>    
      
        </Grid>
    </Grid>
</Window>
