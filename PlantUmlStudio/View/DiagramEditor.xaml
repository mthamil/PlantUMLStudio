<UserControl x:Class="PlantUmlStudio.View.DiagramEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:se="https://github.com/mthamil/SharpEssentials/xaml"
             xmlns:avalon="clr-namespace:PlantUmlStudio.Controls.Behaviors.AvalonEdit"
             xmlns:folding="clr-namespace:PlantUmlStudio.Controls.Behaviors.AvalonEdit.Folding"
             xmlns:img="clr-namespace:PlantUmlStudio.Core.Imaging;assembly=PlantUmlStudio.Core"
             xmlns:cmd="clr-namespace:PlantUmlStudio.ViewModel.Commands"
             xmlns:controls="clr-namespace:PlantUmlStudio.Controls"
             xmlns:vm="clr-namespace:PlantUmlStudio.ViewModel"
             FocusManager.FocusedElement="{Binding ElementName=ContentEditor}"
             LocalizeExtension.DefaultResxName="PlantUmlStudio.View.DiagramEditorResources" Language="{UICulture}"
             mc:Ignorable="d" 
             d:DesignHeight="462" d:DesignWidth="584"
             d:DataContext="{d:DesignInstance Type=vm:DiagramEditorViewModel, IsDesignTimeCreatable=False}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SharpEssentials.Controls;component/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <se:OpenContextMenuCommand x:Key="OpenContextMenuCommand"/>

            <se:GreaterThanConverter x:Key="GreaterThanConverter" Limit="0"/>

            <SolidColorBrush x:Key="CurrentLineBackground" Color="#FFFFFFE0"/>
            <Pen x:Key="CurrentLineBorder" Brush="#FFF2EAEA" Thickness="1.5"/>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{x:Null}" CornerRadius="0,0,0,0">
        <DockPanel>

            <Grid Height="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition Height=".57*"/>
                    <RowDefinition Height="15" MinHeight="5"/>
                    <RowDefinition Height=".40*"/>
                </Grid.RowDefinitions>

                <controls:BindableTextEditor 
                            Grid.Row="0" x:Name="ContentEditor" Padding="10"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            FontFamily="Consolas" FontSize="11pt" Background="White" Foreground="Black"
                            FocusManager.IsFocusScope="True"
                            IsEnabled="{Binding IsIdle}"
                            Document="{Binding CodeEditor.Document}"
                            Encoding="{Binding Diagram.Encoding}"
                            SyntaxHighlighting="{Binding CodeEditor.HighlightingDefinition}"
                            ShowLineNumbers="{Binding CodeEditor.Options.ShowLineNumbers}"
                            WordWrap="{Binding CodeEditor.Options.EnableWordWrap}"
                            CurrentLineBackground="{StaticResource CurrentLineBackground}"
                            CurrentLineBorder="{StaticResource CurrentLineBorder}"
                            EnableVirtualSpace="{Binding CodeEditor.Options.EnableVirtualSpace}"
                            CutCopyWholeLine="{Binding CodeEditor.Options.EmptySelectionCopiesEntireLine}"
                            AllowScrollBelowDocument="{Binding CodeEditor.Options.AllowScrollingBelowContent}"
                            HighlightCurrentLine="{Binding CodeEditor.Options.HighlightCurrentLine}">

                    <i:Interaction.Behaviors>
                        <avalon:BindableSelection SelectionStart="{Binding CodeEditor.SelectionStart, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectionLength="{Binding CodeEditor.SelectionLength, UpdateSourceTrigger=PropertyChanged}"/>
                        <folding:BindableFolding FoldingStrategy="{Binding CodeEditor.FoldingStrategy}" 
                                                 CurrentFoldings="{Binding CodeEditor.CurrentFoldings}"/>
                        <avalon:AddLineTransformers>
                            <controls:HexColorCodeTextHighlighter/>
                        </avalon:AddLineTransformers>
                    </i:Interaction.Behaviors>

                    <controls:BindableTextEditor.InputBindings>
                        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
                        <se:MultiKeyBinding Command="{StaticResource OpenContextMenuCommand}" 
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=controls:BindableTextEditor}}"
                                            Gesture="Ctrl+N,Ctrl+P"/>
                    </controls:BindableTextEditor.InputBindings>

                    <controls:BindableTextEditor.ContextMenu>
                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="{Localize CutEditorContextMenuItem, ResxName=PlantUmlStudio.View.DiagramEditorResources}" 
                                      Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.CodeEditor.CutCommand}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource CutIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Localize CopyEditorContextMenuItem, ResxName=PlantUmlStudio.View.DiagramEditorResources}" 
                                      Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.CodeEditor.CopyCommand}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource CopyIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Localize PasteEditorContextMenuItem, ResxName=PlantUmlStudio.View.DiagramEditorResources}" 
                                      Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.CodeEditor.PasteCommand}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource PasteIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{Localize SnippetsEditorContextMenuItem, ResxName=PlantUmlStudio.View.DiagramEditorResources}" ItemsSource="{Binding CodeEditor.Snippets}">
                                <MenuItem.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Path=SubMenu}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{Binding Icon}" Stretch="None" Style="{StaticResource DisableableIcon}"/>
                                            <TextBlock Text="{Binding Name}" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </MenuItem.ItemTemplate>
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding Command}"/>
                                        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </ContextMenu>
                    </controls:BindableTextEditor.ContextMenu>
                </controls:BindableTextEditor>

                <GridSplitter Grid.Row="1" VerticalAlignment="Center" Width="Auto" Height="3"  HorizontalAlignment="Stretch" Background="#66808080"/>

                <Expander Grid.Row="2" ExpandDirection="Up" IsExpanded="True" Margin="0,0,0,0" Background="White"
                          Style="{StaticResource ExpanderStyle}">
                    <i:Interaction.Behaviors>
                        <se:GridSplitterExpanderSupportBehavior/>
                    </i:Interaction.Behaviors>
                    <Expander.Content>
                        <TabControl TabStripPlacement="Bottom">
                            <TabControl.ItemContainerStyle>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TabItem}">
                                                <Grid>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" 
                                                            BorderThickness="0,0,0,0" Background="{TemplateBinding Background}" 
                                                            Padding="6,2,6,2">
                                                        <ContentPresenter x:Name="Content" ContentSource="Header" 
                                                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                    </Border>
                                                </Grid>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected"  Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                                        <Setter Property="Foreground" Value="Black" />
                                                        <Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,1" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="False"/>
                                                            <Condition Property="IsMouseOver" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="Border" Property="Background" Value="#4D6082" />
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter TargetName="Border" Property="Opacity" Value="1.0" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="False"/>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="Border" Property="Background" Value="#5B7199" />
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter TargetName="Border" Property="Opacity" Value="1.0" />
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TabControl.ItemContainerStyle>

                            <TabItem Header="{Localize ImageTabHeader, ResxName=PlantUmlStudio.View.DiagramEditorResources}">
                                <Border ScrollViewer.CanContentScroll="True" 
                                        ScrollViewer.HorizontalScrollBarVisibility="Visible" 
                                        ScrollViewer.VerticalScrollBarVisibility="Visible">

                                    <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanContentScroll="True" 
                                                  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" 
                                                  Background="White" >

                                        <Image HorizontalAlignment="Center" VerticalAlignment="Top"
                                               Source="{Binding DiagramImage, Mode=OneWay}"
                                               Stretch="None">

                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Errors.Count, Converter={StaticResource GreaterThanConverter}}"
                                                                     Value="True">
                                                            <Setter Property="Opacity" Value="0.5"/>
                                                            <Setter Property="ToolTip" Value="{Localize DiagramImageErrorToolTip, 
                                                                                                        ResxName=PlantUmlStudio.View.DiagramEditorResources}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>

                                            <Image.ContextMenu>
                                                <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                                    <MenuItem Header="{Localize CopyImageContextMenuItem, ResxName=PlantUmlStudio.View.DiagramEditorResources}" 
                                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, 
                                                                                         Path=DataContext.DiagramImage}">
                                                        <MenuItem.Command>
                                                            <cmd:CopyImageCommand/>
                                                        </MenuItem.Command>
                                                        <MenuItem.Icon>
                                                            <Image Source="{StaticResource CopyImageIcon_Small}" Stretch="None" Style="{StaticResource DisableableIcon}"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                    <MenuItem Header="{Localize CopyImagePathContextMenuItem, ResxName=PlantUmlStudio.View.DiagramEditorResources}" 
                                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, 
                                                                                         Path=DataContext.Diagram.ImageFile.FullName}">
                                                        <MenuItem.Command>
                                                            <cmd:CopyTextCommand/>
                                                        </MenuItem.Command>
                                                        <!--<MenuItem.Icon>
                                                            <Image Source="{StaticResource CutIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                                        </MenuItem.Icon>-->
                                                    </MenuItem>
                                                    <MenuItem Header="{Localize BrowseToImageContextMenuItem, ResxName=PlantUmlStudio.View.DiagramEditorResources}" 
                                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, 
                                                                                         Path=DataContext.Diagram.ImageFile.FullName}">
                                                        <MenuItem.Command>
                                                            <cmd:BrowseToCommand/>
                                                        </MenuItem.Command>
                                                        <MenuItem.Icon>
                                                            <Image Source="{StaticResource BrowseToImageIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                </ContextMenu>
                                            </Image.ContextMenu>

                                            <Image.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform 
                                                        ScaleX="{Binding ElementName=ZoomSlider, Path=Value}" 
                                                        ScaleY="{Binding ElementName=ZoomSlider, Path=Value}"/>
                                                </TransformGroup>
                                            </Image.RenderTransform>
                                        </Image>

                                    </ScrollViewer>
                                </Border>
                            </TabItem>

                            <TabItem Header="{Localize ErrorTabHeader, ResxName=PlantUmlStudio.View.DiagramEditorResources}">
                                <DataGrid ItemsSource="{Binding Errors}" AutoGenerateColumns="False" IsReadOnly="True" BorderThickness="0,0,0,0">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="{Localize ErrorsGridDescriptionHeader, ResxName=PlantUmlStudio.View.DiagramEditorResources}" 
                                                            Binding="{Binding Message}" Width="*"/>
                                        <DataGridTextColumn Header="{Localize ErrorsGridLineHeader, ResxName=PlantUmlStudio.View.DiagramEditorResources}" 
                                                            Binding="{Binding Line}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>

                        </TabControl>
                    </Expander.Content>

                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                            <ComboBox ItemsSource="{se:EnumValues {x:Type img:ImageFormat}}" SelectedItem="{Binding ImageFormat}" 
                                      HorizontalContentAlignment="Stretch" ToolTip="{Localize ImageFormatComboBoxToolTip}"/>

                            <Slider x:Name="ZoomSlider" Margin="10,0,0,0" Minimum="0.1" Maximum="2.0" Value="1.0" Width="50" SmallChange="0.1" LargeChange="0.2"
                                    Visibility="{Binding DiagramImage, Converter={StaticResource NullToVisibilityConverter}}"/>
                        </StackPanel>
                    </Expander.Header>
                </Expander>

            </Grid>
        </DockPanel>
    </Border>
</UserControl>
