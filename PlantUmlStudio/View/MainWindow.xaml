<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    x:Class="PlantUmlStudio.View.MainWindow"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:attached="clr-namespace:SharpEssentials.Controls.Behaviors;assembly=SharpEssentials.Controls" 
    xmlns:ctrl="clr-namespace:SharpEssentials.Controls;assembly=SharpEssentials.Controls"
    xmlns:utilconvert="clr-namespace:SharpEssentials.Controls.Converters;assembly=SharpEssentials.Controls" 
    xmlns:utilcmd="clr-namespace:SharpEssentials.Controls.Commands;assembly=SharpEssentials.Controls" 
    xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:PlantUmlStudio="clr-namespace:PlantUmlStudio"
    xmlns:split="clr-namespace:SharpEssentials.Controls.Behaviors.GridSplitterExpanderSupport;assembly=SharpEssentials.Controls"
    xmlns:Clickable="clr-namespace:SharpEssentials.Controls.Behaviors.Clickable;assembly=SharpEssentials.Controls"
    xmlns:xtn="clr-namespace:PlantUmlStudio.View.MarkupExtensions" 
    xmlns:vm="clr-namespace:PlantUmlStudio.ViewModel"
    xmlns:design="clr-namespace:PlantUmlStudio.DesignTimeData"
    xmlns:convert="clr-namespace:PlantUmlStudio.Controls.Converters"
    xmlns:vw="clr-namespace:PlantUmlStudio.View"
    LocalizeExtension.DefaultResxName="PlantUmlStudio.View.MainWindowResources" Language="{UICulture}"
    Title="{Localize Title}" 
    Width="1300" Height="768"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d"
    DataContext="{Binding Source={xtn:ViewModelLocator {x:Type vm:DiagramManagerViewModel}}, Path=ViewModel}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseCommand}" /> 
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SharpEssentials.Controls;component/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <design:DesignTimeDiagramExplorer x:Key="DesignTimeExplorer"/>
            
            <utilconvert:ComposingConverter x:Key="ReverseNullToVisibilityConverter">
                <utilconvert:ComposingConverter.Converters>
                    <utilconvert:NullToFalseValueConverter/>
                    <utilconvert:NegatingConverter/>
                    <utilconvert:BooleanToVisibilityValueConverter/>
                </utilconvert:ComposingConverter.Converters>
            </utilconvert:ComposingConverter>
            
            <utilconvert:FileSystemInfoToDirectoryInfoConverter x:Key="FileSystemInfoCastingConverter"/>
            
            <utilconvert:OrConverter x:Key="OrConverter"/>
            
            <convert:DiagramTabNameConverter x:Key="DiagramTabNameConverter" ModifiedFormat="{}{0}*"/>
      
            <!-- Custom style for diagram listbox which shows preview of diagram as well as preview of the content -->
            <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">        
                <Setter Property="VerticalContentAlignment" 
                        Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Margin" Value="2,2,2,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                
                            <Border SnapsToDevicePixels="True" x:Name="Bd" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Padding="{TemplateBinding Padding}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="contentPresenter" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    
                            </Border>
                
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="DeepSkyBlue" TargetName="Bd"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                                
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
          
                <Setter Property="IsSelected" Value="False"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value> 
                        <Style/> 
                    </Setter.Value>
                </Setter>
          
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                    </Setter.Value>
                </Setter>
          
                <Style.Triggers>
                    <Trigger Property="Selector.IsSelected" Value="True">
                        <Setter Property="Background" Value="Blue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Grid Background="#2B3C59">
        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="#FF000000" Margin="1,1,0,0"/>
    
        <!-- First split the whole form into 3 rows, one for header, one for body and one for footer -->
        <Grid Height="Auto" Width="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" HorizontalAlignment="Stretch">
                <Menu IsMainMenu="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="22" ><!--Background="#B4BFD1">-->
                    <Menu.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="#C5CFDE" Offset="0.0"/>
                            <!--<GradientStop Color="#C0CAD9" Offset="0.2"/>-->
                            <GradientStop Color="#BCC6D7" Offset="0.5"/>
                            <!--<GradientStop Color="#B6C1D3" Offset="0.8"/>-->
                            <GradientStop Color="#B6C1D3" Offset="1"/>
                        </LinearGradientBrush>
                    </Menu.Background>
                    
                    <MenuItem Header="{Localize FileContextMenuHeader}">
                        <MenuItem Header="{Localize NewContextMenuItem}" Name="NewDiagramMenuItem">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <Clickable:BindableClickAction/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <MenuItem.Icon>
                                <Image Source="{StaticResource NewDocumentIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="{Localize OpenContextMenuItem}" Name="OpenDiagramMenuItem">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <Clickable:BindableClickAction/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <MenuItem.Icon>
                                <Image Source="{StaticResource OpenDocumentIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator/>

                        <MenuItem Header="{Localize SaveContextMenuItem}" Command="{Binding OpenDiagram.SaveCommand, FallbackValue={StaticResource NullCommand}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource SaveIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Localize SaveAllContextMenuItem}" Command="{Binding SaveAllCommand}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource SaveAllIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <Separator/>

                        <MenuItem Header="{Localize RecentFilesContextMenuItem}" ItemsSource="{Binding Source={xtn:ViewModelLocator {x:Type vm:RecentFilesMenuViewModel}}, Path=ViewModel.Files}">
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding FullName}" />
                                    </StackPanel>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.Explorer.OpenDiagramCommand}"/>
                                    <Setter Property="CommandParameter" Value="{Binding FullName, Converter={StaticResource UriConverter}}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>

                        <Separator/>

                        <MenuItem Header="{Localize ExitContextMenuItem}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                            <MenuItem.Command>
                                <utilcmd:CloseWindowCommand/>
                            </MenuItem.Command>
                            <MenuItem.Icon>
                                <Image Source="{StaticResource CancelIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="{Localize EditContextMenuHeader}">
                        <MenuItem Header="{Localize UndoContextMenuItem}" Command="{Binding OpenDiagram.CodeEditor.UndoCommand, FallbackValue={StaticResource NullCommand}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource UndoIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Localize RedoContextMenuItem}" Command="{Binding OpenDiagram.CodeEditor.RedoCommand, FallbackValue={StaticResource NullCommand}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource RedoIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="{Localize CutContextMenuItem}" Command="{Binding OpenDiagram.CodeEditor.CutCommand, FallbackValue={StaticResource NullCommand}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource CutIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Localize CopyContextMenuItem}" Command="{Binding OpenDiagram.CodeEditor.CopyCommand, FallbackValue={StaticResource NullCommand}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource CopyIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Localize PasteContextMenuItem}" Command="{Binding OpenDiagram.CodeEditor.PasteCommand, FallbackValue={StaticResource NullCommand}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource PasteIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="{Localize ToolsContextMenuHeader}">
                        <MenuItem Header="{Localize OptionsContextMenuItem}">
                            <MenuItem.Command>
                                <utilcmd:OpenDialogCommand Type="{x:Type vw:SettingsView}" 
                                                           Owner="{Binding Source={x:Static Application.Current}, Path=MainWindow}"/>
                            </MenuItem.Command>
                            <MenuItem.Icon>
                                <Image Source="{StaticResource OptionsIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="{Localize HelpContextMenuHeader}">
                        <MenuItem Header="{Localize AboutContextMenuItem}">
                            <MenuItem.Command>
                                <utilcmd:OpenDialogCommand Type="{x:Type vw:AboutView}" 
                                                           Owner="{Binding Source={x:Static Application.Current}, Path=MainWindow}"/>
                            </MenuItem.Command>
                            <MenuItem.Icon>
                                <Image Source="{StaticResource AboutIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>
                
                <Menu HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="22" >
                    <Menu.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="#C5CFDE" Offset="0.0"/>
                            <GradientStop Color="#BCC6D7" Offset="0.5"/>
                            <GradientStop Color="#B6C1D3" Offset="1"/>
                        </LinearGradientBrush>
                    </Menu.Background>
                    <!--<Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <DockPanel HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>-->

                    <MenuItem Command="{Binding OpenDiagram.SaveCommand, FallbackValue={StaticResource NullCommand}}" ToolTip="Save diagram.">
                        <MenuItem.Header>
                            <StackPanel>
                                <Image Source="{StaticResource SaveIcon_Small}" Stretch="None" Style="{StaticResource DisableableIcon}"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>

                    <MenuItem Command="{Binding SaveAllCommand}" ToolTip="Save all modified diagrams.">
                        <MenuItem.Header>
                            <StackPanel>
                                <Image Source="{StaticResource SaveAllIcon_Small}" Stretch="None" Style="{StaticResource DisableableIcon}"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>

                    <MenuItem Command="{Binding OpenDiagram.RefreshCommand}" ToolTip="Force diagram re-render.">
                        <MenuItem.Header>
                            <StackPanel>
                                <Image Source="{StaticResource RefreshIcon_Small}" Stretch="None" Style="{StaticResource DisableableIcon}"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>

                    <!--<WrapPanel VerticalAlignment="Stretch" HorizontalAlignment="Right" Margin="0,0,0,0">
                        <CheckBox x:Name="AutoSaveCheckbox" Content="AutoSave" IsChecked="{Binding OpenDiagram.AutoSave, Mode=TwoWay}" Margin="0,0,0,0" Foreground="Black"/>
                        <TextBox Text="{Binding OpenDiagram.AutoSaveInterval, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SecondsConverter}}" 
                                 Margin="10,0,0,0" MinWidth="25" VerticalContentAlignment="Stretch" Padding="0"/>
                        <TextBlock Text=" Secs" Margin="0,0,5,0" Foreground="Black"/>
                    </WrapPanel>-->

                </Menu>

                <ctrl:FileSystemPicker AffirmativeCommand="{Binding Explorer.OpenDiagramCommand, Mode=OneWay}"
                                       AffirmativeCommandConverter="{StaticResource FileToUriConverter}"
                                       InitialLocation="{Binding Explorer.DiagramLocation, Mode=OneWay}"
                                       Mode="Open" Filter="{Binding Explorer.FileExtension, StringFormat='PlantUML Diagrams (*{0})|*{0}|All Files (*.*)|*.*'}"
                                       Trigger="{Binding ElementName=OpenDiagramMenuItem, Path=(Clickable:BindableClick.IsClicked)}"/>
            </StackPanel>
      
              <!-- Then split the body area into 3 columns, left column for file list, middle column for the grid splitter
                   and the right column for the tabs -->
            <Grid Height="Auto" Width="Auto" Grid.Row="1" Grid.Column="0" Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="Auto" MinWidth="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
        
                <!-- This is the left column controls -->
                <Expander ExpandDirection="Right" IsExpanded="True" Grid.Column="0">
                    <i:Interaction.Behaviors>
                        <split:GridSplitterExpanderSupportBehavior/>
                    </i:Interaction.Behaviors>
                    <Expander.Content>
                        <Border Background="{x:Null}" CornerRadius="0,0,0,0">
                        <Grid DataContext="{Binding Explorer}" d:DataContext="{StaticResource DesignTimeExplorer}">

                            <Grid.Resources>
                                <CollectionViewSource x:Key="PreviewView" Source="{Binding PreviewDiagrams}"
                                                      d:DesignSource="{Binding Source={StaticResource DesignTimeExplorer}, Path=PreviewDiagrams}">
                                    <CollectionViewSource.SortDescriptions>
                                        <ComponentModel:SortDescription PropertyName="Diagram.File.Name"/>
                                    </CollectionViewSource.SortDescriptions>
                                </CollectionViewSource>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
            
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="300*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions> 
            
                            <!-- This is the location box -->
                            <StackPanel Grid.Row="0" Margin="5,5,5,5">
                                <TextBlock Text="{Localize CurrentDiagramLocationLabel}" Foreground="White" FontFamily="Segoe UI" FontSize="14"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30" />                                    
                                    </Grid.ColumnDefinitions>
                      
                                    <TextBox Grid.Column="0" x:Name="DiagramLocationTextBox"  Height="24" HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Gray" 
                                             attached:TextBoxWatermark.Watermark="Path for diagrams..." Template="{StaticResource WatermarkTextBox}"
                                             Text="{Binding DiagramLocation, Converter={StaticResource DirectoryInfoConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <ctrl:FileSystemPicker SelectedPath="{Binding DiagramLocation, Converter={StaticResource FileSystemInfoCastingConverter}, Mode=TwoWay}"
                                                           Trigger="{Binding ElementName=BrowseForFile, Path=(Clickable:BindableClick.IsClicked)}" 
                                                           InitialLocation="{Binding DiagramLocation, Mode=OneWay}"
                                                           Mode="Directory"/>
                      
                                    <Button Grid.Column="1" Width="Auto" Height="26" Name="BrowseForFile" Content="..." ToolTip="Browse...">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <Clickable:BindableClickAction/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>

                                </Grid>                            
                            </StackPanel>
            
                            <!-- This is the diagram file listbox -->
                            <ListBox Grid.Row="1" Width="Auto" SelectionMode="Extended"
                                     IsSynchronizedWithCurrentItem="True" 
                                     HorizontalContentAlignment="Stretch"    
                                     Background="GhostWhite"
                                     Foreground="Black" 
                                     BorderBrush="{x:Null}" 
                                     Margin="0,0,0,5"
                                     ScrollViewer.CanContentScroll="True"
                                     VirtualizingStackPanel.IsVirtualizing="True"
                                     VirtualizingStackPanel.VirtualizationMode="Recycling"
                                     VerticalAlignment="Stretch" 
                                     SelectedItem="{Binding CurrentPreviewDiagram}"
                                     ItemContainerStyle="{StaticResource ListBoxItemStyle}"
                                     ItemsSource="{Binding Source={StaticResource PreviewView}}">
                    
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding RequestOpenPreviewCommand}" 
                                                                   CommandParameter="{Binding CurrentPreviewDiagram}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Border Padding="0,2,0,2" 
                                                    CornerRadius="2"
                                                    HorizontalAlignment="Stretch" 
                                                    VerticalAlignment="Top">
                                                <StackPanel>
                                                    <WrapPanel HorizontalAlignment="Stretch"  Margin="0,0,10,0">
                                                        <Image MaxWidth="64" MaxHeight="100" 
                                                               Source="{Binding ImagePreview}" 
                                                               Margin="3, 5, 10, 0" VerticalAlignment="Top"/>
                                                        <StackPanel>
                                                            <TextBlock Text="{Binding Diagram.File.Name}"/>
                                                            <TextBlock 
                                                                FontFamily="Consolas"
                                                                Foreground="Black" 
                                                                TextWrapping="WrapWithOverflow" 
                                                                Text="{Binding CodePreview}" 
                                                                TextTrimming="CharacterEllipsis" 
                                                                MaxHeight="100" 
                                                                ClipToBounds="True" 
                                                                VerticalAlignment="Top" />
                                                        </StackPanel>
                                                    </WrapPanel>
                                                    <Separator Foreground="Green" Opacity="0.5" />
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                    <ListBox.ContextMenu>
                                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="{Localize OpenPreviewContextMenuItem, ResxName=PlantUmlStudio.View.MainWindowResources}"
                                                      Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=DataContext.RequestOpenPreviewCommand}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=DataContext.CurrentPreviewDiagram}">
                                                <MenuItem.Icon>
                                                    <Image Source="{StaticResource OpenInEditorIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="{Localize DeletePreviewContextMenuItem, ResxName=PlantUmlStudio.View.MainWindowResources}"
                                                      Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=DataContext.DeleteDiagramCommand}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=DataContext.CurrentPreviewDiagram}">
                                                <MenuItem.Icon>
                                                    <Image Source="{StaticResource DeleteDocumentIcon_Small}" Style="{StaticResource DisableableIcon}"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </ListBox.ContextMenu>

                                </ListBox>
            
                            <StackPanel Grid.Row="2" Height="Auto" HorizontalAlignment="Stretch" Margin="0,0,0,4">
                                <ctrl:FileSystemPicker AffirmativeCommand="{Binding AddNewDiagramCommand, Mode=OneWay}"
                                                       AffirmativeCommandConverter="{StaticResource FileToUriConverter}"
                                                       InitialLocation="{Binding DiagramLocation, Mode=OneWay}"
                                                       Mode="Save" Filter="{Binding FileExtension, StringFormat='PlantUML Diagram Files (*{0})|*{0}'}">
                                    <ctrl:FileSystemPicker.Trigger>
                                        <MultiBinding Converter="{StaticResource OrConverter}">
                                            <Binding ElementName="NewDiagramMenuItem" Path="(Clickable:BindableClick.IsClicked)"/>
                                        </MultiBinding>
                                    </ctrl:FileSystemPicker.Trigger>
                                </ctrl:FileSystemPicker>
                        
                                <Button Height="25">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>

                                                <DataTrigger Binding="{Binding IsLoadingDiagrams}" Value="False">
                                                    <Setter Property="Command" Value="{Binding LoadDiagramsCommand}"/>
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Image Source="{StaticResource RefreshIcon_Small}" Stretch="None"/>
                                                                    <TextBlock Text="{Localize RefreshDiagramsButton, ResxName=PlantUmlStudio.View.MainWindowResources}" Margin="5,0,0,0"/>
                                                            </StackPanel>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsLoadingDiagrams}" Value="True">
                                                    <Setter Property="Command" Value="{Binding CancelLoadDiagramsCommand}"/>
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Image Source="{StaticResource CancelIcon_Small}" Stretch="None"/>
                                                                <TextBlock Text="{Localize CancelDiagramRefreshButton, ResxName=PlantUmlStudio.View.MainWindowResources}" Margin="5,0,0,0"/>
                                                            </StackPanel>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
            
                          </Grid>
                        </Border>
                    </Expander.Content>
                </Expander>

                <GridSplitter Grid.Column="1" Height="100" VerticalAlignment="Center" Width="3" HorizontalAlignment="Center" Grid.Row="0" Background="#66808080" />

                <ctrl:MVVMMessageBox DataContext="{Binding ClosingDiagram}"
                    AffirmativeAction="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.SaveClosingDiagramCommand}"
                    Message="{Binding Diagram.File.Name, StringFormat='{}{0} has unsaved changes. Do you want to save them?'}"
                    Trigger="{Binding CodeEditor.IsModified}"
                    Caption="Save Changes?"
                    Type="YesNo"/>

                <!-- This is the tabs on right column -->
                <TabControl Grid.Column="2" Background="{x:Null}"
                            ItemsSource="{Binding OpenDiagrams}" 
                            SelectedItem="{Binding OpenDiagram}"
                            Visibility="{Binding OpenDiagram, Converter={StaticResource NullToVisibilityConverter}}">

                    <i:Interaction.Behaviors>
                        <attached:TabWheelScrolling InvertScrollDirection="False" ScrollWrapsAround="False"/>    
                    </i:Interaction.Behaviors>
                    
                    <TabControl.ContentTemplate>
                        <DataTemplate DataType="{x:Type vm:DiagramEditorViewModel}">
                            <vw:DiagramEditorView HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </DataTemplate>
                    </TabControl.ContentTemplate>

                    <TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Content" Value="{Binding}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">

                                        <Grid>
                                            <Border x:Name="Border" Background="Gray" BorderBrush="Black" BorderThickness="1,1,1,1" CornerRadius="6,6,0,0" >
                                                <DockPanel HorizontalAlignment="Stretch">
                                                    <TextBlock VerticalAlignment="Center" Margin="12,2,12,2">
                                                        <TextBlock.Text>
                                                            <MultiBinding Converter="{StaticResource DiagramTabNameConverter}">
                                                                <Binding Path="Diagram.File.Name"/>
                                                                <Binding Path="CodeEditor.IsModified"/>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>

                                                    <Button DockPanel.Dock="Right" Margin="1,1,3,1"
                                                            HorizontalAlignment="Right" VerticalAlignment="Center"
                                                            Command="{Binding CloseCommand}" Style="{StaticResource TabCloseButton}"
                                                            ToolTip="Close"/>
                                                </DockPanel>
                                            </Border>
                                        </Grid>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected"  Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                                <Setter Property="Foreground" Value="Black" />
                                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="#44587C" />
                                                <Setter Property="Foreground" Value="White" />
                                                <Setter TargetName="Border" Property="Opacity" Value="1.0" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.ItemContainerStyle>

                </TabControl>
        
                <!-- This is the welcome panel -->
                <Border x:Name="WelcomePanel" 
                        Grid.Column="2" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"
                        BorderBrush="{x:Null}" 
                        CornerRadius="0,0,0,0"
                        Visibility="{Binding OpenDiagram, Converter={StaticResource ReverseNullToVisibilityConverter}}">
                    <Grid>
                        <Rectangle HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Stretch" 
                                    Fill="GhostWhite" 
                                    RadiusX="0" 
                                    RadiusY="0" 
                                    StrokeThickness="1" />
                        <StackPanel>
                            <TextBlock HorizontalAlignment="Center" FontFamily="Segoe UI" FontStretch="Condensed" FontSize="30" Margin="0,11,0,10">
                                <Run Text="{Localize WelcomeMessageTitle}"/>
                            </TextBlock>
                            <Separator HorizontalAlignment="Stretch" Height="1" />
                            <TextBlock Text="{Localize WelcomeMessage}" HorizontalAlignment="Center" TextWrapping="Wrap" Margin="20" 
                                       FontFamily="Segoe UI" FontSize="20" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>                    
                </Border>
        
            </Grid>

            <!-- This is the bottom row containing status message and progress bar -->
            <vw:StatusBar Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,0" MinHeight="25"/>

        </Grid>
    </Grid>
</Window>
